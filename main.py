from auth import TOKEN
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, reply_keyboard

API_TOKEN = TOKEN

# –ò–Ω–∏—Ü–∏–∞–ª—å–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–£—á–∏—Ç–µ–ª—å")],
        [types.KeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç")]
    ]
    keyboardStart = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )
    await message.reply("–ü—Ä–∏–≤–µ—Çüëã\n–ö–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å?", reply_markup=keyboardStart)


@dp.message_handler()
async def echo(message: types.Message):
    if message.text == '–£—á–∏—Ç–µ–ª—å':
        check_lab_teatcher = KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç')
        change_lab_teatcher = KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç')
        add_evaluation_teatcher = KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å (–∏–∑–º–µ–Ω–∏—Ç—å) –æ—Ü–µ–Ω–∫—É —É—á–µ–Ω–∏–∫—É')
        back = KeyboardButton('–ù–∞–∑–∞–¥')
        button_teatcher = ReplyKeyboardMarkup().add(check_lab_teatcher).add(change_lab_teatcher).add(add_evaluation_teatcher).add(back)
        await message.reply("", reply_markup=button_teatcher)

    elif message.text == '–°—Ç—É–¥–µ–Ω—Ç':
        await message.reply("", reply_markup=types.ReplyKeyboardRemove())


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)