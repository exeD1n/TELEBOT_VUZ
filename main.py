from cgitb import text
from auth import TOKEN
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, reply_keyboard
from database import name_group, name_subject

API_TOKEN = TOKEN
# –ò–Ω–∏—Ü–∏–∞–ª—å–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)



# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–£—á–∏—Ç–µ–ª—å")],
        [types.KeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç")]
    ]
    keyboardStart = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.full_name} üëã\n–ö–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å?', reply_markup=keyboardStart)
    
    
# –í—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
@dp.message_handler(text = "–°—Ç—É–¥–µ–Ω—Ç")
async def echo(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å"),
            types.KeyboardButton(text="–õ–æ–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ")
        ],
        [
            types.KeyboardButton(text = '–ú–µ–Ω—é'),
        ]
    ]
    keyboardStudChek = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    )
    await message.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å', reply_markup=keyboardStudChek)
        
# –í—ã–±–æ—Ä —Å—Ç—É–¥–µ–Ω—Ç–æ–º —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏
@dp.message_handler(text='–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å')
async def echo(message: types.Message):
    builder = ReplyKeyboardMarkup()
    for i in name_group:
        builder.add(types.KeyboardButton(text=str(i)))
    builder.add(types.KeyboardButton(text='–ú–µ–Ω—é'))
    await message.answer('–í –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ –≤—ã —É—á–∏—Ç–µ—Å—å?', reply_markup=builder) 
    
@dp.message_handler()
async def echo(message: types.Message):
    builder = ReplyKeyboardMarkup()
    for i in name_group:
        if message.text == i:
            builder = ReplyKeyboardMarkup()
            for k, j in name_subject.items():        
                builder.add(types.KeyboardButton(text=str(j)))
            builder.add(types.KeyboardButton(text='–ú–µ–Ω—é'))
            await message.reply('–í—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–µ–¥–º–µ—Ç', reply_markup=builder)           
    # for k, j in name_subject.items():        
    #      if message.text == j:
    #         kb = [
    #             [types.KeyboardButton(text="—Ö—É–π")],
    #             [types.KeyboardButton(text="—Ö—É–π2")]
    #         ]
    #         keyboardChek = types.ReplyKeyboardMarkup(
    #             keyboard=kb,
    #             resize_keyboard=True
    #         )
    #         await message.reply('–ísfdsfsdfsf', reply_markup=keyboardChek)  
    

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
    